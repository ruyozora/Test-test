<?php

require_once dirname(__FILE__) . '/../../../application/model/Queue.php';

/**
 * Test class for Queue.
 * Generated by PHPUnit on 2012-04-12 at 13:36:17.
 */
class QueueTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Queue
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Queue;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Queue::setStore
     * @todo Implement testSetStore().
     */
    public function testSetStore() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Queue::add
     * @todo Implement testAdd().
     */
    public function testAdd() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Queue::remove
     * @todo Implement testRemove().
     */
    public function testRemove() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Queue::maxPosition
     * @todo Implement testMaxPosition().
     */
    public function testMaxPosition() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    
    /**
     * @covers Queue::size
     * @todo Implement testSize().
     */
    public function testSize()
    {
        $db = Application::getInstance() -> mysqli;
        $db -> query('DELETE FROM Assortment');
        $db -> query('DELETE FROM Basket');
        $db -> query('DELETE FROM Queue');
        $db -> query('DELETE FROM Store'); 
        $db -> query('DELETE FROM Product');
               

        
        $s = Store::factory('Grocery');
        $s -> name = 'Grocery #1';
        $s -> add();
        
        for ($i = 0; $i<3; $i++)
        {
            $this -> assertEquals($s -> queue -> size(), $i);
            
            $w = Person::factory('adult');
            $w -> name = 'Person #'.$i;
            $w -> add();
            
            $s -> queue -> add($w);
        }

        $this -> assertEquals($s -> queue -> size(), 3);
    }

}

?>
